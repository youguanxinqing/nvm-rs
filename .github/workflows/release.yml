name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check existing release
        id: check_release
        run: |
          release=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ github.ref }}")
          echo "::set-output name=release_exists::$(echo $release | jq '. | length')"

      - name: Create Release
        id: create_release
        if: steps.check_release.outputs.release_exists == '0'  # 只有在不存在时创建
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: "Release ${{ github.ref }}"
          draft: false
          prerelease: false

      - name: Build
        run: cargo build --release

      - name: Upload Release Asset
        uses: actions/upload-release-asset@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/release/nvm  # 替换为您的构建产物路径
          asset_name: nvm-linux  # 替换为您的构建产物名称
          asset_content_type: application/octet-stream
